#!/bin/sh
# libpcreposix only, jemalloc, libatomic
# PC Files???

set -xe
hash tar gzip make cmake nproc patch

_CC=$(readlink -f $(which ${CC:-cc}))

echo ___COMPILER___
$_CC --version

for std in 17 11 99 89
do	echo | $_CC -fsyntax-only -std=c$std -xc - && break
done
echo Latest compiler c standard supported is $std
export CFLAGS="-march=native -pipe -O3"

# Below C11
[ $std -gt 88 ] && LIBATOMIC=--with-libatomic

printf 'Checking whether the compiler supports “-fstack-protector-strong”… '
echo | $_CC -fsyntax-only -fstack-protector-strong -xc - &&{
	CFLAGS="$CFLAGS -fstack-protector-strong"
	echo yes
}|| echo no
echo

echo Detecting which compiler is under use…
case $(basename $_CC) in
	clang*)_CC=clang && CFLAGS="$CFLAGS -Wno-unused-command-line-argument";;
	*gcc*) _CC=gcc   ;; # Asterix at start: x86_64-linux-gnu-gcc-8
	*) echo Unsupported compiler \`$_CC\' && false
esac

_root=$PWD

cd deps

# Gathering all the dependencies
# EPOLLEXCLUSIVE not available : Linux4.5 / glibc2.24
# reuseport is available : Linux3.9+

# Headers are required for LibreSSL & nginx
cd kernel-headers
make -j`nproc` ARCH=x86_64 DESTDIR=/opt prefix= install
cd -

# MUSL (CANNOT BE BUILD WITH C11)
cd musl
./configure --prefix=/opt --enable-wrapper=$_CC #--enable-warnings
make -j`nproc` --silent install
cd -

export CC=/opt/bin/musl-$_CC LDFLAGS=-static

cd jemalloc
./configure --prefix=/opt --disable-cxx CFLAGS="-std=gnu$std $CFLAGS"
make -j`nproc` install_lib_static
cd -

CFLAGS="-std=c$std $CFLAGS"
LDFLAGS="$LDFLAGS -ljemalloc"

[ -z $LIBATOMIC ] || {
tar xf libatomic_ops-*
cd libatomic_ops-*
./configure --prefix=/opt --disable-docs
make -j`nproc` install
cd -
}

# PCRE
# I have a bug which does not aloud me to make
# PCRE without automake if I extract and commit
# Therefor, I need to manually extract it
tar xf pcre-*.tar.gz
cd pcre-*
./configure --prefix=/opt --enable-jit --enable-utf --enable-unicode-properties --disable-cpp --enable-shared=0
make -j`nproc` install-binSCRIPTS install-libLTLIBRARIES install-nodist_includeHEADERS # The bin is required for njs
# pkgconfigDATA includeHEADERS=pcreposix
cd -

# ZLIB
cd zlib
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt
make -j`nproc` zlibstatic
# TODO
cp libz.a /opt/lib
cp zlib.h zconf.h /opt/include
cd -

# LibreSSL (REQUIRES ASM)
# LibreSSL from Git requires automake, autoconf, etc.
# https://github.com/libressl-portable/portable/tree/master#prerequisites-when-building-from-a-git-checkout
tar xf libressl-*.tar.gz
cd libressl-*
rm include/tls.h
env CFLAGS="$CFLAGS -std=gnu$std" cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt
make -j`nproc` ssl crypto
cmake -P include/cmake_install.cmake
cmake -P crypto/cmake_install.cmake
cmake -P ssl/cmake_install.cmake
cd -

# NJS & NGX
find .. -name \*.patch -exec patch -Np0 -i{} \;

# NGINX
cd nginx
auto/configure $LIBATOMIC \
	--prefix=/opt/nginx \
	--pid-path=/run/nginx.pid \
	--sbin-path=bin/nginx \
	--modules-path=modules \
	--conf-path=conf/nginx.conf \
	--error-log-path=logs/error.log \
	--lock-path=logs/nginx.lock \
	--group=www-data \
	--add-module=../njs/nginx \
	--add-module=../ngx-brotli \
	--add-module=../nginx-length-hiding-filter-module \
	--with-compat \
	--with-stream \
	--with-threads \
	--with-file-aio \
	--with-http_v2_module \
	--with-http_ssl_module \
	--with-stream_ssl_module \
	--without-http_userid_module \
	--without-http_access_module \
	--without-http_auth_basic_module \
	--without-http_autoindex_module \
	--without-http_geo_module \
	--without-http_map_module \
	--without-http_split_clients_module \
	--without-http_fastcgi_module \
	--without-http_scgi_module \
	--without-http_browser_module \
	--without-http_upstream_hash_module \
	--without-http_upstream_ip_hash_module \
	--without-http_upstream_least_conn_module \
	--without-http_upstream_keepalive_module \
	--without-http_upstream_zone_module \
	--without-select_module \
	--without-poll_module \
	--without-mail_pop3_module \
	--without-mail_imap_module \
	--without-mail_smtp_module \
	--without-stream_limit_conn_module \
	--without-stream_access_module \
	--without-stream_geo_module \
	--without-stream_map_module \
	--without-stream_split_clients_module \
	--without-stream_return_module \
	--without-stream_upstream_hash_module \
	--without-stream_upstream_least_conn_module \
	--without-stream_upstream_zone_module \
	--with-cc-opt='-g -O2 -ffunction-sections -fdata-sections --param=ssp-buffer-size=4 -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security' \
	--with-ld-opt='-static -Wl,-Bsymbolic-functions,--gc-sections,--as-needed,-s,-z,relro,-z,now'
	#--with-cpu-opt
	#--build="nginx/$NGINX (nginx-zero)" \
	# THE CONFIG FILE DOES NOT CONSIDER LDFLAGS
make -j`nproc` install
cd -

tar czf $_root/nginx.tar.gz -C/opt nginx
